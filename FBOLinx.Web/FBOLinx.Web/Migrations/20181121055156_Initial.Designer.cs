// <auto-generated />
using System;
using FBOLinx.DB.Context;
using FBOLinx.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FBOLinx.Web.Migrations
{
    [DbContext(typeof(FboLinxContext))]
    [Migration("20181121055156_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FBOLinx.Web.Models.Contacts", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<bool?>("CopyAlerts");

                    b.Property<string>("Country")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Extension")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("Primary");

                    b.Property<string>("State")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Oid");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("FBOLinx.Web.Models.CustomerAircrafts", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddedFrom");

                    b.Property<int>("AircraftId")
                        .HasColumnName("AircraftID");

                    b.Property<string>("BasedPaglocation")
                        .HasColumnName("BasedPAGLocation")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("CustomerId")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("GroupId")
                        .HasColumnName("GroupID");

                    b.Property<string>("NetworkCode")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Size");

                    b.Property<string>("TailNumber")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Oid");

                    b.HasIndex("CustomerId")
                        .HasName("INX_CA_CustomerID");

                    b.HasIndex("TailNumber")
                        .HasName("INX_CustomerAircrafts_TailNumber");

                    b.HasIndex("Oid", "CustomerId", "AircraftId", "TailNumber", "Size", "BasedPaglocation", "NetworkCode", "GroupId")
                        .HasName("INX_CA_ID");

                    b.HasIndex("Oid", "CustomerId", "AircraftId", "TailNumber", "Size", "BasedPaglocation", "NetworkCode", "AddedFrom", "GroupId")
                        .HasName("INX_GroupID");

                    b.ToTable("CustomerAircrafts");
                });

            modelBuilder.Entity("FBOLinx.Web.Models.Customers", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Action");

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CheckFuelPrice")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Company")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<bool?>("Distribute");

                    b.Property<int?>("FuelerlinxId")
                        .HasColumnName("FuelerlinxID");

                    b.Property<int?>("GroupId")
                        .HasColumnName("GroupID");

                    b.Property<DateTime?>("Joined")
                        .HasColumnType("datetime");

                    b.Property<string>("Lastlogin")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("MainPhone")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<double?>("Margin");

                    b.Property<bool?>("Network");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Pilot")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<bool?>("Show100Ll")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Show100LL")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ShowJetA")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("State")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<bool?>("Suspended");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ZipCode")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("Oid");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FBOLinx.Web.Models.Fboairports", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DefaultTemplate");

                    b.Property<int>("Fboid")
                        .HasColumnName("FBOID");

                    b.Property<string>("Iata")
                        .HasColumnName("IATA")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Icao")
                        .HasColumnName("ICAO")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Oid");

                    b.HasIndex("Fboid")
                        .IsUnique();

                    b.ToTable("FBOAirports");
                });

            modelBuilder.Entity("FBOLinx.Web.Models.Fbos", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<bool?>("ApplyGroupMargin");

                    b.Property<bool?>("ApplySalesTax");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Currency")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateActivated")
                        .HasColumnType("datetime");

                    b.Property<short?>("DefaultMarginType100Ll")
                        .HasColumnName("DefaultMarginType100LL");

                    b.Property<short?>("DefaultMarginTypeJetA");

                    b.Property<bool>("DisableCost");

                    b.Property<string>("Extension")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Fbo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("FuelDeskEmail")
                        .IsUnicode(false);

                    b.Property<int?>("GroupId")
                        .HasColumnName("GroupID");

                    b.Property<bool?>("GroupMargin");

                    b.Property<double?>("GroupMargin100Llmargin")
                        .HasColumnName("GroupMargin100LLMargin");

                    b.Property<short?>("GroupMargin100Lltype")
                        .HasColumnName("GroupMargin100LLType");

                    b.Property<bool?>("GroupMarginFuture");

                    b.Property<double?>("GroupMarginMargin");

                    b.Property<short?>("GroupMarginSetting");

                    b.Property<short?>("GroupMarginTemplate");

                    b.Property<short?>("GroupMarginType");

                    b.Property<bool?>("InitialSetupPhase")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("MainPhone")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<double?>("PostedRetail");

                    b.Property<double?>("PostedRetail100Ll")
                        .HasColumnName("PostedRetail100LL");

                    b.Property<bool?>("PriceUpdateNeverPrompt");

                    b.Property<bool?>("PriceUpdateReminderPrompt")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("SalesTax");

                    b.Property<string>("State")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<bool?>("Suspended");

                    b.Property<double?>("TotalCost");

                    b.Property<double?>("TotalCost100Ll")
                        .HasColumnName("TotalCost100LL");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ZipCode")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("Oid");

                    b.HasIndex("GroupId");

                    b.ToTable("FBOs");
                });

            modelBuilder.Entity("FBOLinx.Web.Models.Group", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Domain")
                        .IsUnicode(false);

                    b.Property<string>("GroupName")
                        .HasColumnName("Group")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("Isfbonetwork")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ISFBONetwork")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LoggedInHomePage")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Oid");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("FBOLinx.Web.Models.Fboairports", b =>
                {
                    b.HasOne("FBOLinx.Web.Models.Fbos", "Fbo")
                        .WithOne("fboAirport")
                        .HasForeignKey("FBOLinx.Web.Models.Fboairports", "Fboid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FBOLinx.Web.Models.Fbos", b =>
                {
                    b.HasOne("FBOLinx.Web.Models.Group", "Group")
                        .WithMany("Fbos")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_FBOs_Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
